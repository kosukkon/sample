--테이블초기화----------------------------

--제약조건은 대문자로 표시해둠 최종수정함!!

-------------------------------------------
create table center				--지점정보
(
	ct_code number(10) primary key,	--지점코드 PK
	ct_name varchar(20),		--지점이름
	ct_tel varchar(20),			--지점전화
	ct_addr varchar(50),			--지점주소
	ct_intro varchar(4000)		--지점소개
);
create table member 			--회원정보
(
	mem_num number(10) primary key,	--회원번호 PK
	mem_name varchar(20) not null,	--회원이름
	mem_phoen varchar(20) not null,	--전화번호
	mem_addr varchar(100) not null,	--회원주소
	mem_email varchar(20) not null,	--이메일
	mem_age	number(10) not null,		--회원나이
	mem_gen number(10) not null,		--회원성별
	mem_birth date not null,		--생년월일
	regdate date not null,		--가입일
	mem_picture varchar(100) not null,	--사진파일
	ct_code number(10)	REFERENCES CENTER(CT_CODE) --지점코드 FK
);
create table medicalcheck			--의료정보
(
	md_num number(10) primary key,	--MD번호
	mem_num number(10) REFERENCES MEMBER(MEM_NUM), --회원번호 FK
	relative number(10),			--상대적
	absolute number(10),		--절대적
	par-q number(10)			--PAR-Q
);
create table survey				--설문
(
	sv_num number(10) primary key,	--설문번호
	sv_route varchar(50),		--방문경로
	sv_anamnesis varchar(50),		--운동경험
	sv_lifestyle varchar(1000),		--생활방식
	sv_goal varchar(1000),		--운동목표
	sv_memo varchar(4000),		--기타사항
	mem_num number(10) REFERENCES MEMBER(MEM_NUM), --회원번호 FK
	sv_agree number(10)		--동의여부
);
create table freeboard			--자유게시판
( 
	fb_num number(10) primary key,	--글번호 PK
	mem_num number(10) REFERENCES MEMBER(MEM_NUM),--작성자 FK
	fb_titel varchar(100),			--글제목
	fb_content varchar(4000),		--글내용
	fb_date date,			--작성일
	fb_hit number(10),			--조회수
	fb_ref number(10),			--그룹번호
	fb_lef number(10),			--글레벨
	fb_step number(10)			--출력순서
);
create table qnaboard			--QnA게시판
(
	qna_num number(10) primary key,	--글번호 PK
	mem_num number(10) REFERENCES MEMBER(MEM_NUM),--작성자(회원번호) FK
	qna_title varchar(100),		--글제목
	qna_content varchar(4000),		--글내용
	qna_date	date,			--작성일
	qna_hit number(10),			--조회수
	qna_ref number(10),			--그룹번호
	qna_lev number(10),			--글레벨
	qna_step number(10)		--출력순서
);
create table mem_att			--회원출석
(
	att_date date primary key,		--출석일 PK
	mem_num number(10) REFERENCES MEMBER(MEM_NUM),--회원번호 FK	
	ct_code number(10)			--지점코드
);
create table registration			--동록정보
(
	rg_num number(10) primary key,	--등록번호
	mem_num number(10) REFERENCES MEMBER(MEM_NUM),--회원번호 FK
	rg_type varchar(10),			--등록종류
	rg_price number(10),			--등록가격
	locker_price number(10),		--락커가격
	wear_price number(10)		--운동복가격
);
create table period				--기간테이블
(
	pri_num number(10) primary key,	--기간번호 PK
	pri_start date,			--등록시작일
	pri_end date,			--등록만료일
	pri_left date,			--잔여일
	today date,			--오늘
	rg_num number(10) REFERENCES REGISTRATION(RG_NUM)	--등록번호 FK
);
create table refund				--환불
(
	rf_num number(10) primary key,	--환불번호 PK
	rg_num number(10) REFERENCES REGISTRATION(RG_NUM),	--등록번호 FK
	rf_left date,			--잔여일
	pri_num number(10)	REFERENCES PERIOD(PRI_NUM)--기간번호 FK
);
create table department			--부서정보
(
	dept_code number(10) primary key,	--부서코드PK
	dept_name varchar(20)		--부서이름
);
create table position				--직급정보
(
	pos_code varchar(20) primary key,	--직급코드 PK
	pos_name varchar(20),		--직급이름
	dept_code number(10) REFERENCES DEPARTMENT(DEPT_CODE) --부서코드 FK
);
create table staff				--스태프
(
	stf_num number(10) primary key,	--스태프번호 PK
	stf_name varchar(10),		--스태프이름
	stf_phone varchar(10),		--스태프전화
	stf_date date,			--스태프등록일
	stf_picture varchar(10),		--스태프사진
	pos_code varchar(20) REFERENCES POSITION(POS_CODE),	--직급코드 FK
	ct_code number(10) REFERENCES CENTER(CT_CODE) --지점코드 FK
);
create table trainer				--강사정보
(
	tr_num number(10) primary key,	--강사번호 PK
	stf_num number(10) REFERENCES STAFF(STF_NUM), --스태프번호 FK
	tr_career varchar(4000),		--강사경력
	tr_introduce varchar(4000)		--강사소개
);
create table timetable			--강의시간
(
	tt_num number(10) primary key,	--시간번호 PK
	tt01 number(10),			--1교시
	tt02 number(10),			--2교시			
	tt03 number(10),			--3교시
	tt04 number(10),			--4교시
	tt05 number(10),			--5교시
	tt06 number(10)			--6교시
);
create table pt_schedule				--PT스케줄
(
	pts_num number(10) primary key,	--PT스케줄번호 PK
	pts_start date,			--PT시작일
	pts_end date,			--PT만료일
	mem_num number(10) REFERENCES MEMBER(MEM_NUM),--회원번호FK
	tt_num number(10) REFERENCES TIMETABLE(TT_NUM),--시간번호FK
	tr_num number(10) REFERENCES TRAINER(TR_NUM),--강사번호FK
	ct_code number(10) REFERENCES CENTER(CT_CODE) --지점코드FK
);
create table pt_log				--운동일지
(
	ptl_num number(10) primary key,	--일지번호 PK
	ptl_content varchar(10),		--일지내용
	pts_num number(10)	 REFERENCES PT_SCHEDULE(PTS_NUM)--PT스케줄번호 FK
);
create table medicalcheck			--의료정보
(
	md_num number(10) primary key,	--md번호 PK
	mem_num number(10) REFERENCES MEMBER(MEM_NUM) --회원번호 FK
);
create table sales				--매출
(	
	sal_num number(10) primary key,	--매출번호 PK
	sal_money number(10),		--매출금액	
	ct_code number(10)	REFERENCES CENTER(CT_CODE) --지점코드 FK
);
create table stf_att				--직원출석
(
	satt_date date primary key,		--출석일 PK
	stf_num number(10) REFERENCES STAFF(STF_NUM),--직원번호 FK
	ct_code number(10)			--지점코드
);
create table payment			--월급
(
	pay_num number(10) primary key,	--월급번호 PK
	pay_tot number(10),			--월급합계
	pay_date date,			--지급날짜
	satt_date date REFERENCES STF_ATT(SATT_DATE) --출석일 FK
);
create table notice				--공지사항	
(
	nt_num number(10) primary key,	--글번호 PK
	stf_num number(10) REFERENCES STAFF(STF_NUM), --스태프 번호 FK
	nt_title varchar(100),			--글제목
	nt_content varchar(4000),		--글내용
	nt_date date,			--작성일
	nt_hit number(10)			--조회수
);
create table subject				--과목정보
(
	sb_code varchar(10) primary key,	--과목코드 PK
	sb_name varchar(20)		--과목이름
);
create table gx_schedule			--GX스케줄
(
	gx_num number(10) primary key,	--GX스케줄번호 PK
	sb_code varchar(10) REFERENCES SUBJECT(SB_CODE), --과목코드 FK
	gx_start number(10),		--강의시작일
	gx_end number(10),			--강의만료일
	tt_num number(10) REFERENCES TIMETABLE(TT_NUM), --시간번호 FK
	tr_num number(10) REFERENCES TRAINER(TR_NUM), --강사번호 FK
	ct_code number(10) REFERENCES CENTER(CT_CODE) --지점코드 FK
);
create table event				--이벤트
(
	ev_num number(10) primary key,	--이벤트번호 PK
	ev_title number(10),			--이벤트제목
	stf_num number(10) REFERENCES STAFF(STF_NUM), --이벤트작성자 FK
	ev_content number(10),		--이벤트내용
	re_writer number(10),		--댓글작성자
	re_content number(10),		--댓글내용
	re_ref number(10),			--그룹번호
	re_step number(10)			--댓글출력순서
);

COMMIT;

--------------------------------------------------------
--제약조건 추가줄때 옵션 예)
--ALTER TABLE GROUPS
--ADD CONSTRAINTS FK_GROUPS_LEADER FOREIGN KEY(id)
--REFERENCES MEMBER(ID);